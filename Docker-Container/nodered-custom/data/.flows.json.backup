[
    {
        "id": "9e5230c8d38af4ce",
        "type": "tab",
        "label": "COAP and MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4d50d5059e3124c8",
        "type": "tab",
        "label": "RabbitMQ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e7073b8a36296641",
        "type": "tab",
        "label": "RabbitMQ-Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b2f1ec0b798e1b36",
        "type": "tab",
        "label": "RabbitMQ IoTExchange",
        "disabled": false,
        "info": ""
    },
    {
        "id": "640a2d7df9180b0e",
        "type": "tab",
        "label": "XMPP with Openfire",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9bfc2b6b.d09d68",
        "type": "tab",
        "label": "influxdb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dae29d0432198ee9",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a928ba0.2d1f748",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.30.0.101",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0648859e6711c8f9",
        "type": "ui_tab",
        "name": "Sensors",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "40213cc014bd0905",
        "type": "ui_group",
        "name": "Default",
        "tab": "0648859e6711c8f9",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ae2aceeadfb4b296",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "7b6c645b.5efc9c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "host.docker.internal",
        "port": "3306",
        "db": "NODERED",
        "tz": "",
        "charset": ""
    },
    {
        "id": "e38ada7c23eea3a7",
        "type": "global-config",
        "name": "global-config",
        "env": []
    },
    {
        "id": "4e53f268.aaddbc",
        "type": "ui_group",
        "name": "LUCI",
        "tab": "95d17d8a.8e1d8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "95d17d8a.8e1d8",
        "type": "ui_tab",
        "name": "StreetScience",
        "icon": "fa-bed",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "212c1de1.ea67e2",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "4e53f268.aaddbc",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "dfafb391.8a17d",
        "type": "influxdb",
        "hostname": "192.168.2.231",
        "port": "8086",
        "protocol": "http",
        "database": "electricpower",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://host.docker.internal:8086",
        "timeout": "",
        "rejectUnauthorized": true
    },
    {
        "id": "3112eb76eeec366e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "host.docker.internal",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f373fb80f9b86423",
        "type": "amqp-broker",
        "name": "",
        "host": "host.docker.internal",
        "port": "5672",
        "vhost": "/",
        "tls": false,
        "credsFromSettings": false
    },
    {
        "id": "ui-group",
        "type": "ui_group",
        "name": "Default",
        "tab": "ui-tab",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui-tab",
        "type": "ui_tab",
        "name": "IoT Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "mysql-config",
        "type": "MySQLdatabase",
        "name": "MySQL",
        "host": "host.docker.internal",
        "port": "3306",
        "db": "IoTData"
    },
    {
        "id": "09e52ac0d5efe734",
        "type": "xmpp-server",
        "server": "172.30.0.106",
        "port": "5222",
        "user": "iotdevice@localhost",
        "nickname": "",
        "resource": ""
    },
    {
        "id": "5dbcf5dfa2242593",
        "type": "xmpp-server",
        "server": "172.30.0.106",
        "port": "5222",
        "user": "user1",
        "nickname": "",
        "resource": ""
    },
    {
        "id": "9a9785a72c57e268",
        "type": "mqtt in",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "topic": "/sensors/1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3112eb76eeec366e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "3a9dbe1931492665",
                "2a72916604cb64d9"
            ]
        ]
    },
    {
        "id": "dc0abbe4e10e6aba",
        "type": "function",
        "z": "9e5230c8d38af4ce",
        "name": "SELECT ALL FROM NODERED",
        "func": "msg.topic = \"SELECT * FROM Temperature\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 480,
        "wires": [
            [
                "9a6a9a26b8cf4294"
            ]
        ]
    },
    {
        "id": "57555daab2aa643b",
        "type": "debug",
        "z": "9e5230c8d38af4ce",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 480,
        "wires": []
    },
    {
        "id": "0df1f1dc738000d7",
        "type": "inject",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "dc0abbe4e10e6aba"
            ]
        ]
    },
    {
        "id": "d9cc89151f219347",
        "type": "function",
        "z": "9e5230c8d38af4ce",
        "name": "TEST INSERT",
        "func": "msg.topic = \"INSERT INTO Temperature(value, sensor) VALUES(2, 'Sensor 2')\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 80,
        "wires": [
            [
                "da10cb5451a8def6"
            ]
        ]
    },
    {
        "id": "158e900637ee6ee7",
        "type": "inject",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "d9cc89151f219347"
            ]
        ]
    },
    {
        "id": "3a9dbe1931492665",
        "type": "function",
        "z": "9e5230c8d38af4ce",
        "name": "INSERT MQTT SENSOR 1",
        "func": "flow.set('mqtt_sensor1value', msg.payload);\nmsg.topic = \"INSERT INTO Temperature(value, sensor) VALUES(\" + flow.get('mqtt_sensor1value') +\",'MQTT Sensor 1')\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 240,
        "wires": [
            [
                "bcdeaea1a0219d0c"
            ]
        ]
    },
    {
        "id": "dea03a7e90c6b6c1",
        "type": "function",
        "z": "9e5230c8d38af4ce",
        "name": "INSERT COAP SENSOR 1",
        "func": "flow.set('coap_sensor1value', msg.payload);\nmsg.topic = \"INSERT INTO Temperature(value, sensor) VALUES(\" + flow.get('coap_sensor1value') +\",'COAP Sensor 1')\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "dda09a158cd6f00f",
                "673dac94e734f072"
            ]
        ]
    },
    {
        "id": "e18a06eb76f906e6",
        "type": "inject",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "297096a4d3dc7a8b"
            ]
        ]
    },
    {
        "id": "35e19e583ea186b2",
        "type": "inject",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "22f8cd071aa96f78",
                "70313c387b3c0495"
            ]
        ]
    },
    {
        "id": "22f8cd071aa96f78",
        "type": "function",
        "z": "9e5230c8d38af4ce",
        "name": "GET LAST MQTT 1 VALUE",
        "func": "msg.topic = \"select value FROM Temperature WHERE sensor = 'MQTT Sensor 1' ORDER BY id  DESC limit 1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 540,
        "wires": [
            [
                "f94823e21177f714"
            ]
        ]
    },
    {
        "id": "70313c387b3c0495",
        "type": "function",
        "z": "9e5230c8d38af4ce",
        "name": "GET LAST COAP 1 VALUE",
        "func": "msg.topic = \"select value FROM Temperature WHERE sensor = 'COAP Sensor 1' ORDER BY id  DESC limit 1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 660,
        "wires": [
            [
                "5abab02b6ca26f1c"
            ]
        ]
    },
    {
        "id": "0c492f8dfe1f782a",
        "type": "debug",
        "z": "9e5230c8d38af4ce",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 600,
        "wires": []
    },
    {
        "id": "2e296c7e8c6b4a56",
        "type": "debug",
        "z": "9e5230c8d38af4ce",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 720,
        "wires": []
    },
    {
        "id": "7e36a306bfd45c0c",
        "type": "change",
        "z": "9e5230c8d38af4ce",
        "name": "move 1st row into payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 600,
        "wires": [
            [
                "0c492f8dfe1f782a",
                "e1985f77fa07ccc9"
            ]
        ]
    },
    {
        "id": "b6e93f4863224f1e",
        "type": "change",
        "z": "9e5230c8d38af4ce",
        "name": "move 1st row into payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 760,
        "wires": [
            [
                "2e296c7e8c6b4a56",
                "09683db1e79e9108"
            ]
        ]
    },
    {
        "id": "297096a4d3dc7a8b",
        "type": "coap request",
        "z": "9e5230c8d38af4ce",
        "method": "GET",
        "confirmable": false,
        "observe": false,
        "multicast": false,
        "multicastTimeout": 20000,
        "url": "coap://se4iot-simplecoapserver:5683/temperature",
        "content-format": "text/plain",
        "raw-buffer": false,
        "name": "temperature",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "dea03a7e90c6b6c1"
            ]
        ]
    },
    {
        "id": "e1985f77fa07ccc9",
        "type": "ui_gauge",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "group": "40213cc014bd0905",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "MQTT 1",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1140,
        "y": 540,
        "wires": []
    },
    {
        "id": "09683db1e79e9108",
        "type": "ui_gauge",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "group": "40213cc014bd0905",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "COAP 1",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1100,
        "y": 660,
        "wires": []
    },
    {
        "id": "da10cb5451a8def6",
        "type": "mysql",
        "z": "9e5230c8d38af4ce",
        "mydb": "7b6c645b.5efc9c",
        "name": "",
        "x": 870,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9a6a9a26b8cf4294",
        "type": "mysql",
        "z": "9e5230c8d38af4ce",
        "mydb": "7b6c645b.5efc9c",
        "name": "",
        "x": 750,
        "y": 480,
        "wires": [
            [
                "57555daab2aa643b"
            ]
        ]
    },
    {
        "id": "bcdeaea1a0219d0c",
        "type": "mysql",
        "z": "9e5230c8d38af4ce",
        "mydb": "7b6c645b.5efc9c",
        "name": "",
        "x": 870,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "673dac94e734f072",
        "type": "mysql",
        "z": "9e5230c8d38af4ce",
        "mydb": "7b6c645b.5efc9c",
        "name": "",
        "x": 1050,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f94823e21177f714",
        "type": "mysql",
        "z": "9e5230c8d38af4ce",
        "mydb": "7b6c645b.5efc9c",
        "name": "",
        "x": 710,
        "y": 540,
        "wires": [
            [
                "7e36a306bfd45c0c"
            ]
        ]
    },
    {
        "id": "5abab02b6ca26f1c",
        "type": "mysql",
        "z": "9e5230c8d38af4ce",
        "mydb": "7b6c645b.5efc9c",
        "name": "",
        "x": 710,
        "y": 660,
        "wires": [
            [
                "b6e93f4863224f1e"
            ]
        ]
    },
    {
        "id": "dda09a158cd6f00f",
        "type": "debug",
        "z": "9e5230c8d38af4ce",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "2a72916604cb64d9",
        "type": "debug",
        "z": "9e5230c8d38af4ce",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "5f3273e337f1c534",
        "type": "coap request",
        "z": "9e5230c8d38af4ce",
        "method": "GET",
        "confirmable": false,
        "observe": false,
        "multicast": false,
        "multicastTimeout": 20000,
        "url": "coap://se4iot-simplecoapserver:5683/humidity",
        "content-format": "text/plain",
        "raw-buffer": false,
        "name": "humidity",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "8a71dc65fbc40816"
            ]
        ]
    },
    {
        "id": "8a71dc65fbc40816",
        "type": "debug",
        "z": "9e5230c8d38af4ce",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 420,
        "wires": []
    },
    {
        "id": "b23ababe9daab2d5",
        "type": "inject",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "5f3273e337f1c534"
            ]
        ]
    },
    {
        "id": "2262f78d127bce09",
        "type": "function",
        "z": "9e5230c8d38af4ce",
        "name": "Random",
        "func": "var val = Math.random()\nmsg.payload = val; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 140,
        "wires": [
            [
                "32a81161a7043728"
            ]
        ]
    },
    {
        "id": "7ac08f3df4b9d12b",
        "type": "inject",
        "z": "9e5230c8d38af4ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 140,
        "wires": [
            [
                "2262f78d127bce09"
            ]
        ]
    },
    {
        "id": "32a81161a7043728",
        "type": "debug",
        "z": "9e5230c8d38af4ce",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "sensor-temperature",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Temperature Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Temperature\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 600,
        "y": 60,
        "wires": [
            [
                "301334811b0966d3"
            ]
        ]
    },
    {
        "id": "sensor-humidity",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Humidity Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Humidity\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 590,
        "y": 140,
        "wires": [
            [
                "cad5cf0858d9b572"
            ]
        ]
    },
    {
        "id": "sensor-light",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Light Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Light\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 570,
        "y": 220,
        "wires": [
            [
                "35bfe3b2a874674b"
            ]
        ]
    },
    {
        "id": "debug-gateway",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 300,
        "wires": []
    },
    {
        "id": "301334811b0966d3",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "smarthome",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.temperature",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1080,
        "y": 60,
        "wires": []
    },
    {
        "id": "cad5cf0858d9b572",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "smarthome",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.humidity",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1070,
        "y": 140,
        "wires": []
    },
    {
        "id": "35bfe3b2a874674b",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "smarthome",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.light",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1060,
        "y": 220,
        "wires": []
    },
    {
        "id": "329330202ea01bba",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "smarthome",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.temperature,livingroom.humidity",
        "exchangeDurable": true,
        "queueName": "",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 680,
        "y": 300,
        "wires": [
            [
                "debug-gateway"
            ]
        ]
    },
    {
        "id": "8dcc596362bd1ac4",
        "type": "comment",
        "z": "4d50d5059e3124c8",
        "name": "Direct",
        "info": "",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "0a5f7375368ab3b2",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Temperature Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Temperature\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 540,
        "y": 580,
        "wires": [
            [
                "50ea47e1cedd4e6d"
            ]
        ]
    },
    {
        "id": "50ea47e1cedd4e6d",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "DirectExchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.temperature",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 880,
        "y": 580,
        "wires": []
    },
    {
        "id": "8aed02adb1c1292c",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "DirectExchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.temperature",
        "exchangeDurable": true,
        "queueName": "DE-Queue1",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 1230,
        "y": 580,
        "wires": [
            [
                "6bc73ada5aff00fa"
            ]
        ]
    },
    {
        "id": "6bc73ada5aff00fa",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 580,
        "wires": []
    },
    {
        "id": "6a9aea18d95da77d",
        "type": "comment",
        "z": "4d50d5059e3124c8",
        "name": "Fanout",
        "info": "",
        "x": 430,
        "y": 680,
        "wires": []
    },
    {
        "id": "20045115758516a8",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Temperature Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Temperature\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 520,
        "y": 760,
        "wires": [
            [
                "c59dafc5f8f1ac96"
            ]
        ]
    },
    {
        "id": "c59dafc5f8f1ac96",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "FE-FanoutExchange",
        "exchangeType": "fanout",
        "exchangeRoutingKey": "",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 780,
        "y": 760,
        "wires": []
    },
    {
        "id": "1d2a94c9f0091d1b",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "FE-FanoutExchange",
        "exchangeType": "fanout",
        "exchangeRoutingKey": "",
        "exchangeDurable": true,
        "queueName": "FE-Queue1",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "93d068212d856f78"
            ]
        ]
    },
    {
        "id": "d615f4ba5ac71a50",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "FE-FanoutExchange",
        "exchangeType": "fanout",
        "exchangeRoutingKey": "",
        "exchangeDurable": true,
        "queueName": "FE-Queue2",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 1010,
        "y": 780,
        "wires": [
            [
                "eef4f60d43f183a7"
            ]
        ]
    },
    {
        "id": "9eae4fbf43d5ca02",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "FE-FanoutExchange",
        "exchangeType": "fanout",
        "exchangeRoutingKey": "",
        "exchangeDurable": true,
        "queueName": "FE-Queue3",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 1010,
        "y": 840,
        "wires": [
            [
                "863c8309c2e50a1a"
            ]
        ]
    },
    {
        "id": "93d068212d856f78",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 720,
        "wires": []
    },
    {
        "id": "eef4f60d43f183a7",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 780,
        "wires": []
    },
    {
        "id": "863c8309c2e50a1a",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 840,
        "wires": []
    },
    {
        "id": "87c00e8b8951bcd7",
        "type": "comment",
        "z": "4d50d5059e3124c8",
        "name": "Topic Exchange",
        "info": "",
        "x": 460,
        "y": 940,
        "wires": []
    },
    {
        "id": "0463c0ce73d500e9",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Temperature Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Temperature\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 520,
        "y": 1020,
        "wires": [
            [
                "de368e3e023487a1"
            ]
        ]
    },
    {
        "id": "de368e3e023487a1",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "TopicExchange",
        "exchangeType": "topic",
        "exchangeRoutingKey": "livingroom.temperature",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 820,
        "y": 1020,
        "wires": []
    },
    {
        "id": "a63de5a7dc18822a",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "TopicExchange",
        "exchangeType": "topic",
        "exchangeRoutingKey": "livingroom.*",
        "exchangeDurable": true,
        "queueName": "TE-Queue1",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 1240,
        "y": 980,
        "wires": [
            [
                "7236ba0ae07a434f"
            ]
        ]
    },
    {
        "id": "85a649cea57fc790",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "TopicExchange",
        "exchangeType": "topic",
        "exchangeRoutingKey": "livingroom.humidity",
        "exchangeDurable": true,
        "queueName": "TE-Queue2",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 1260,
        "y": 1060,
        "wires": [
            [
                "87a5e4a1ae25f635"
            ]
        ]
    },
    {
        "id": "0388c6282d342af2",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "TopicExchange",
        "exchangeType": "topic",
        "exchangeRoutingKey": "livingroom.temperature",
        "exchangeDurable": true,
        "queueName": "TE-Queue3",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 1270,
        "y": 1140,
        "wires": [
            [
                "48d2f69d905e4bfd"
            ]
        ]
    },
    {
        "id": "7236ba0ae07a434f",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 980,
        "wires": []
    },
    {
        "id": "87a5e4a1ae25f635",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1060,
        "wires": []
    },
    {
        "id": "48d2f69d905e4bfd",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 1140,
        "wires": []
    },
    {
        "id": "73017340d2cb2bfa",
        "type": "comment",
        "z": "4d50d5059e3124c8",
        "name": "Headers Exchange",
        "info": "",
        "x": 470,
        "y": 1260,
        "wires": []
    },
    {
        "id": "811af7d2a56ffbf8",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "HeadersExchange",
        "exchangeType": "headers",
        "exchangeRoutingKey": "",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {\"room\" : \"livingroom\"} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 750,
        "y": 1320,
        "wires": []
    },
    {
        "id": "941118f584a7c66f",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Temperature Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Living Room Temperature\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 520,
        "y": 1320,
        "wires": [
            [
                "811af7d2a56ffbf8"
            ]
        ]
    },
    {
        "id": "ac34af7986cf4ff6",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "HeadersExchange",
        "exchangeType": "headers",
        "exchangeRoutingKey": "",
        "exchangeDurable": true,
        "queueName": "HE-Queue1",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{\"room\" : \"livingroom\"}",
        "x": 1170,
        "y": 1320,
        "wires": [
            [
                "ab731cb3a96b968d"
            ]
        ]
    },
    {
        "id": "ab731cb3a96b968d",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 1320,
        "wires": []
    },
    {
        "id": "435afd2bc542b844",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "HeadersExchange",
        "exchangeType": "headers",
        "exchangeRoutingKey": "",
        "exchangeDurable": true,
        "queueName": "HE-Queue2",
        "queueExclusive": true,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{\"room\" : \"kitchen\"}",
        "x": 1170,
        "y": 1400,
        "wires": [
            [
                "dd4daf66aa4f6505"
            ]
        ]
    },
    {
        "id": "dd4daf66aa4f6505",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8e46943ae96d9330",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "HeadersExchange",
        "exchangeType": "headers",
        "exchangeRoutingKey": "",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {\"room\" : \"kitchen\"} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 750,
        "y": 1400,
        "wires": []
    },
    {
        "id": "c5b539ace99bbf8e",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Temperature Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"sensor\": \"Kitchen Temperature\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 520,
        "y": 1400,
        "wires": [
            [
                "8e46943ae96d9330"
            ]
        ]
    },
    {
        "id": "dc9fe94120d75cfc",
        "type": "comment",
        "z": "4d50d5059e3124c8",
        "name": "Two Queues Bound to the Same Routing Key",
        "info": "",
        "x": 550,
        "y": 1600,
        "wires": []
    },
    {
        "id": "inject-temperature",
        "type": "inject",
        "z": "4d50d5059e3124c8",
        "name": "Send Temperature Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "routingKey",
                "v": "sensor.temperature",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "{ \"sensor\": \"temperature\", \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 580,
        "y": 1700,
        "wires": [
            [
                "amqp-out-node"
            ]
        ]
    },
    {
        "id": "amqp-out-node",
        "type": "amqp-out",
        "z": "4d50d5059e3124c8",
        "name": "Publish to Exchange",
        "broker": "f373fb80f9b86423",
        "exchangeName": "direct_exchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "sensor.temperature",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{}",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 880,
        "y": 1700,
        "wires": []
    },
    {
        "id": "amqp-in-queue1",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "Queue1 (Temperature)",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "direct_exchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "sensor.temperature",
        "exchangeDurable": true,
        "queueName": "queue1",
        "queueExclusive": false,
        "queueDurable": true,
        "queueAutoDelete": false,
        "headers": "{}",
        "x": 580,
        "y": 1820,
        "wires": [
            [
                "debug-queue1"
            ]
        ]
    },
    {
        "id": "amqp-in-queue2",
        "type": "amqp-in",
        "z": "4d50d5059e3124c8",
        "name": "Queue2 (Temperature)",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "direct_exchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "sensor.temperature",
        "exchangeDurable": true,
        "queueName": "queue2",
        "queueExclusive": false,
        "queueDurable": true,
        "queueAutoDelete": false,
        "headers": "{}",
        "x": 580,
        "y": 1940,
        "wires": [
            [
                "debug-queue2"
            ]
        ]
    },
    {
        "id": "debug-queue1",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Queue1 Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 880,
        "y": 1820,
        "wires": []
    },
    {
        "id": "debug-queue2",
        "type": "debug",
        "z": "4d50d5059e3124c8",
        "name": "Queue2 Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 880,
        "y": 1940,
        "wires": []
    },
    {
        "id": "0a12fdca8c704c25",
        "type": "inject",
        "z": "e7073b8a36296641",
        "name": "Temperature Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"sensor\":\"Temperature\", \"value\": $floor($random() * (35 - 15) + 15)}",
        "payloadType": "jsonata",
        "x": 290,
        "y": 280,
        "wires": [
            [
                "abd739677ba6c224"
            ]
        ]
    },
    {
        "id": "a7da606bd4028aac",
        "type": "inject",
        "z": "e7073b8a36296641",
        "name": "Humidity Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"sensor\":\"Humidity\", \"value\": $floor($random() * (80 - 20) + 20)}",
        "payloadType": "jsonata",
        "x": 310,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "40de04bdcb186185",
        "type": "inject",
        "z": "e7073b8a36296641",
        "name": "Light Sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"sensor\":\"Light\", \"value\": $floor($random() * (1000 - 200) + 200)}",
        "payloadType": "jsonata",
        "x": 320,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "fca3a95e800386c9",
        "type": "amqp-in",
        "z": "e7073b8a36296641",
        "name": "Gateway Temperature",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "DirectExchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.temperature",
        "exchangeDurable": true,
        "queueName": "DE-Queue-Temperature",
        "queueExclusive": false,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 840,
        "y": 380,
        "wires": [
            [
                "6682dcb39d414286",
                "f216dc2dbe469017"
            ]
        ]
    },
    {
        "id": "22cfbc5b524dedda",
        "type": "amqp-in",
        "z": "e7073b8a36296641",
        "name": "Gateway Humidity",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "DirectExchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.humidity",
        "exchangeDurable": true,
        "queueName": "DE-Queue-Humidity",
        "queueExclusive": false,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 850,
        "y": 460,
        "wires": [
            [
                "6682dcb39d414286"
            ]
        ]
    },
    {
        "id": "bfb15bd6894c70c5",
        "type": "amqp-in",
        "z": "e7073b8a36296641",
        "name": "Gateway Light",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "DirectExchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.light",
        "exchangeDurable": true,
        "queueName": "DE-Queue-Light",
        "queueExclusive": false,
        "queueDurable": false,
        "queueAutoDelete": true,
        "headers": "{}",
        "x": 870,
        "y": 520,
        "wires": [
            [
                "6682dcb39d414286"
            ]
        ]
    },
    {
        "id": "6682dcb39d414286",
        "type": "function",
        "z": "e7073b8a36296641",
        "name": "Data Aggregator",
        "func": "var alertMsg = null;\nvar okMsg = null;\n\n// Check sensor types and create alerts if needed\nif (msg.payload.sensor === \"Temperature\" && msg.payload.value > 20) {\n    alertMsg = { payload: \"High Temperature Alert: \" + msg.payload.value };\n} else if (msg.payload.sensor === \"Light\" && msg.payload.value < 300) {\n    alertMsg = { payload: \"Low Light Alert: \" + msg.payload.value };\n}\n\nokMsg = {payload : \"Temperature is OK -> \" + msg.payload.value};\n\n// Send to alerts if conditions are met\nif (alertMsg) {\n    node.send([alertMsg]);\n}  else {\n    node.send([okMsg]);\n}\n\n \n\n// Send data to debug output\n//node.send([msg, null]);",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "d55ed9ebce8e1b92"
            ]
        ]
    },
    {
        "id": "d55ed9ebce8e1b92",
        "type": "debug",
        "z": "e7073b8a36296641",
        "name": "Gateway Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 320,
        "wires": []
    },
    {
        "id": "abd739677ba6c224",
        "type": "amqp-out",
        "z": "e7073b8a36296641",
        "name": "",
        "broker": "f373fb80f9b86423",
        "exchangeName": "DirectExchange",
        "exchangeType": "direct",
        "exchangeRoutingKey": "livingroom.temperature",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 740,
        "y": 280,
        "wires": []
    },
    {
        "id": "200f4c0202b65ae2",
        "type": "ui_gauge",
        "z": "e7073b8a36296641",
        "name": "",
        "group": "40213cc014bd0905",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "AMQP",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "f216dc2dbe469017",
        "type": "function",
        "z": "e7073b8a36296641",
        "name": "getTemperature",
        "func": "var temperature;\n\ntemperature = msg.payload.value;\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 300,
        "wires": [
            [
                "200f4c0202b65ae2"
            ]
        ]
    },
    {
        "id": "sensor1",
        "type": "inject",
        "z": "b2f1ec0b798e1b36",
        "name": "Simulate Sensor Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{ \"sensor\": \"temperature\", \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "process-alerts"
            ]
        ]
    },
    {
        "id": "process-alerts",
        "type": "function",
        "z": "b2f1ec0b798e1b36",
        "name": "Process Alerts",
        "func": "var alertMsg = null;\nvar okMsg = msg.payload;\n\n// Threshold for temperature\nif (msg.payload.sensor === \"temperature\" && msg.payload.value > 30) {\n    alertMsg = {\n        payload: {\n            sensor: msg.payload.sensor,\n            value: msg.payload.value,\n            alert: \"High Temperature Alert\"\n        }\n    };\n} else {\n    alertMsg = {\n        payload: {\n            sensor: msg.payload.sensor,\n            value: msg.payload.value,\n            alert: \"No Alerts\"\n        }\n    };\n}\n\nreturn alertMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 160,
        "wires": [
            [
                "publish-to-rabbitmq",
                "debug-payload"
            ]
        ]
    },
    {
        "id": "publish-to-rabbitmq",
        "type": "amqp-out",
        "z": "b2f1ec0b798e1b36",
        "name": "Publish to IoTExchange",
        "broker": "f373fb80f9b86423",
        "exchangeName": "IoTExchange",
        "exchangeType": "fanout",
        "exchangeRoutingKey": "",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{}",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "subscribe-from-rabbitmq",
        "type": "amqp-in",
        "z": "b2f1ec0b798e1b36",
        "name": "Subscribe to IoTExchange",
        "broker": "f373fb80f9b86423",
        "prefetch": 0,
        "noAck": true,
        "exchangeName": "IoTExchange",
        "exchangeType": "fanout",
        "exchangeRoutingKey": "",
        "exchangeDurable": true,
        "queueName": "IoTQueue",
        "queueExclusive": false,
        "queueDurable": true,
        "queueAutoDelete": false,
        "headers": "{}",
        "x": 590,
        "y": 480,
        "wires": [
            [
                "debug-received",
                "c2ceb6c025128e1e",
                "65dc7eb6cb210188"
            ]
        ]
    },
    {
        "id": "debug-payload",
        "type": "debug",
        "z": "b2f1ec0b798e1b36",
        "name": "Debug Published Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "debug-received",
        "type": "debug",
        "z": "b2f1ec0b798e1b36",
        "name": "Debug Received Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 520,
        "wires": []
    },
    {
        "id": "display-data",
        "type": "ui_gauge",
        "z": "b2f1ec0b798e1b36",
        "name": "Temperature Gauge",
        "group": "ui-group",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1220,
        "y": 320,
        "wires": []
    },
    {
        "id": "c2ceb6c025128e1e",
        "type": "function",
        "z": "b2f1ec0b798e1b36",
        "name": "getTemperature",
        "func": "msg.payload = msg.payload.value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 320,
        "wires": [
            [
                "display-data"
            ]
        ]
    },
    {
        "id": "5b8cea04b02820e5",
        "type": "ui_text",
        "z": "b2f1ec0b798e1b36",
        "group": "ui-group",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Message",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1200,
        "y": 380,
        "wires": []
    },
    {
        "id": "65dc7eb6cb210188",
        "type": "function",
        "z": "b2f1ec0b798e1b36",
        "name": "getAlert",
        "func": "msg.payload = msg.payload.alert;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 380,
        "wires": [
            [
                "5b8cea04b02820e5"
            ]
        ]
    },
    {
        "id": "inject1",
        "type": "inject",
        "z": "640a2d7df9180b0e",
        "name": "Test Message",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"sensor\": \"Temperature\",     \"value\": $floor($random() * (35 - 15) + 15) }",
        "payloadType": "jsonata",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "07bcaff9004443ca"
            ]
        ]
    },
    {
        "id": "9ca16024ae1d3c96",
        "type": "ui_gauge",
        "z": "640a2d7df9180b0e",
        "name": "",
        "group": "40213cc014bd0905",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "XMPP",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "fded66f5637319d6",
        "type": "debug",
        "z": "640a2d7df9180b0e",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 500,
        "wires": []
    },
    {
        "id": "d7c9fbadd0e763e3",
        "type": "json",
        "z": "640a2d7df9180b0e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "dd92ab506d57ca19"
            ]
        ]
    },
    {
        "id": "dd92ab506d57ca19",
        "type": "function",
        "z": "640a2d7df9180b0e",
        "name": "getTemperature",
        "func": "msg.payload = msg.payload.value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 440,
        "wires": [
            [
                "9ca16024ae1d3c96",
                "fded66f5637319d6"
            ]
        ]
    },
    {
        "id": "b0f3f49c26a48c9e",
        "type": "xmpp in",
        "z": "640a2d7df9180b0e",
        "name": "",
        "server": "5dbcf5dfa2242593",
        "to": "",
        "join": false,
        "x": 130,
        "y": 420,
        "wires": [
            [
                "d7c9fbadd0e763e3"
            ],
            []
        ]
    },
    {
        "id": "07bcaff9004443ca",
        "type": "xmpp out",
        "z": "640a2d7df9180b0e",
        "name": "",
        "server": "09e52ac0d5efe734",
        "to": "user1@localhost",
        "join": false,
        "sendObject": false,
        "x": 390,
        "y": 160,
        "wires": []
    },
    {
        "id": "64a0c6b6.128d78",
        "type": "inject",
        "z": "9bfc2b6b.d09d68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "524fec5b.ab0234"
            ]
        ]
    },
    {
        "id": "524fec5b.ab0234",
        "type": "function",
        "z": "9bfc2b6b.d09d68",
        "name": "",
        "func": "var power = String(Math.floor(Math.random() * (600 - 200) + 200));\nmsg.payload = {\n    \"device\": \"device2\",\n    \"host\": \"NodeRed\",\n    \"power\": power+\"i\"\n}; \nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 240,
        "wires": [
            [
                "f6790b7f.588668",
                "72809518.e1dccc"
            ]
        ]
    },
    {
        "id": "f6790b7f.588668",
        "type": "debug",
        "z": "9bfc2b6b.d09d68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 380,
        "wires": []
    },
    {
        "id": "72809518.e1dccc",
        "type": "influxdb out",
        "z": "9bfc2b6b.d09d68",
        "influxdb": "dfafb391.8a17d",
        "name": "",
        "measurement": "powerconsumption",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "univaq",
        "bucket": "se4iot",
        "x": 400,
        "y": 480,
        "wires": []
    },
    {
        "id": "414f1c69b815f5df",
        "type": "mqtt in",
        "z": "9bfc2b6b.d09d68",
        "name": "",
        "topic": "/nodered/powerconsumption",
        "qos": "0",
        "datatype": "auto",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 420,
        "y": 80,
        "wires": [
            [
                "f5aa7ddf6be19fff",
                "edf1a23a96023636"
            ]
        ]
    },
    {
        "id": "63e617a25f05ec34",
        "type": "influxdb out",
        "z": "9bfc2b6b.d09d68",
        "influxdb": "dfafb391.8a17d",
        "name": "",
        "measurement": "powerconsumption",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "univaq",
        "bucket": "se4iot",
        "x": 990,
        "y": 160,
        "wires": []
    },
    {
        "id": "f5aa7ddf6be19fff",
        "type": "json",
        "z": "9bfc2b6b.d09d68",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 160,
        "wires": [
            [
                "63e617a25f05ec34"
            ]
        ]
    },
    {
        "id": "edf1a23a96023636",
        "type": "debug",
        "z": "9bfc2b6b.d09d68",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 380,
        "wires": []
    },
    {
        "id": "1c5203f54951bf7a",
        "type": "inject",
        "z": "dae29d0432198ee9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "bf7324f2aabd204b"
            ]
        ]
    },
    {
        "id": "b2f8793ee7d3d83d",
        "type": "function",
        "z": "dae29d0432198ee9",
        "name": "function 1",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 380,
        "wires": [
            [
                "b49d4bb8c8beb9b6"
            ]
        ]
    },
    {
        "id": "b49d4bb8c8beb9b6",
        "type": "debug",
        "z": "dae29d0432198ee9",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 460,
        "wires": []
    },
    {
        "id": "bf7324f2aabd204b",
        "type": "http request",
        "z": "dae29d0432198ee9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://dataportal-api.nordpoolgroup.com/api/DayAheadPrices?date=2024-11-25&market=DayAhead&deliveryArea=FI&currency=EUR",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "b2f8793ee7d3d83d"
            ]
        ]
    }
]