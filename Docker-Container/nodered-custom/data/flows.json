[
    {
        "id": "dae29d0432198ee9",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f61c2b29ea14be48",
        "type": "tab",
        "label": "Test MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae2aceeadfb4b296",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e38ada7c23eea3a7",
        "type": "global-config",
        "name": "global-config",
        "env": []
    },
    {
        "id": "95d17d8a.8e1d8",
        "type": "ui_tab",
        "name": "StreetScience",
        "icon": "fa-bed",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ab54eb197c955ed0",
        "type": "mqtt-broker",
        "name": "MQTT docker",
        "broker": "tcp://host.docker.internal",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5bc7043e36b5ea36",
        "type": "influxdb",
        "hostname": "host.docker.internal",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://host.docker.internal:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "1c5203f54951bf7a",
        "type": "inject",
        "z": "dae29d0432198ee9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "c9bdb6d2675a3b81"
            ]
        ]
    },
    {
        "id": "b2f8793ee7d3d83d",
        "type": "function",
        "z": "dae29d0432198ee9",
        "name": "function 1",
        "func": "let prices = JSON.parse(msg.payload).multiAreaEntries;\nlet formattedData = prices.map(price => {\n    return {\n        measurement: \"electricity_price\",\n        tags: {\n            \"deliveryArea\": \"FI\",\n            \"currency\": \"EUR\"\n        },\n        fields: {\n            \"price\": price.entryPerArea.FI // The price value, assuming it's in 'price'\n        },\n        timestamp: new Date(price.deliveryStart).getTime() // Convert to nanoseconds\n    };\n});\n\n// Return the formatted data as msg.payload (Array of points for InfluxDB)\nmsg.payload = formattedData;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 260,
        "wires": [
            [
                "b49d4bb8c8beb9b6",
                "da11170d9ba45afb"
            ]
        ]
    },
    {
        "id": "b49d4bb8c8beb9b6",
        "type": "debug",
        "z": "dae29d0432198ee9",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 460,
        "wires": []
    },
    {
        "id": "bf7324f2aabd204b",
        "type": "http request",
        "z": "dae29d0432198ee9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://dataportal-api.nordpoolgroup.com/api/DayAheadPrices?date={{{date}}}&market=DayAhead&deliveryArea=FI&currency=EUR",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 180,
        "wires": [
            [
                "b2f8793ee7d3d83d"
            ]
        ]
    },
    {
        "id": "c9bdb6d2675a3b81",
        "type": "function",
        "z": "dae29d0432198ee9",
        "name": "function 4",
        "func": "const baseUrl = \"https://dataportal-api.nordpoolgroup.com/api/DayAheadPrices?date={{msg.date}}&market=DayAhead&deliveryArea=FI&currency=EUR\";\n\nconst today = new Date();\nconst yyyy = today.getFullYear();\nconst mm = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\nconst dd = String(today.getDate()).padStart(2, '0');\n\nmsg.dateParam = `${yyyy}-${mm}-${dd}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "c11980994d52b0f1"
            ]
        ]
    },
    {
        "id": "c11980994d52b0f1",
        "type": "change",
        "z": "dae29d0432198ee9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "date",
                "pt": "msg",
                "to": "dateParam",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 100,
        "wires": [
            [
                "bf7324f2aabd204b"
            ]
        ]
    },
    {
        "id": "da11170d9ba45afb",
        "type": "influxdb batch",
        "z": "dae29d0432198ee9",
        "influxdb": "5bc7043e36b5ea36",
        "precision": "",
        "retentionPolicy": "",
        "name": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "univaq",
        "bucket": "se4iot",
        "x": 500,
        "y": 320,
        "wires": []
    },
    {
        "id": "b6b5d27157600e77",
        "type": "inject",
        "z": "f61c2b29ea14be48",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "/test",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "e485b1a2f8e01daf"
            ]
        ]
    },
    {
        "id": "46b3552681a72602",
        "type": "mqtt out",
        "z": "f61c2b29ea14be48",
        "name": "",
        "topic": "/test",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ab54eb197c955ed0",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "3726dd759abf57ad",
        "type": "mqtt in",
        "z": "f61c2b29ea14be48",
        "name": "",
        "topic": "/test",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ab54eb197c955ed0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "60e579584b183408"
            ]
        ]
    },
    {
        "id": "60e579584b183408",
        "type": "function",
        "z": "f61c2b29ea14be48",
        "name": "function 2",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 200,
        "wires": [
            [
                "bd44fa3d34bb1af9",
                "8c2bd301882ad0e0"
            ]
        ]
    },
    {
        "id": "bd44fa3d34bb1af9",
        "type": "debug",
        "z": "f61c2b29ea14be48",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 200,
        "wires": []
    },
    {
        "id": "e485b1a2f8e01daf",
        "type": "function",
        "z": "f61c2b29ea14be48",
        "name": "function 3",
        "func": "msg.payload = Math.random() * (25 - 15) + 15;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "46b3552681a72602"
            ]
        ]
    },
    {
        "id": "8c2bd301882ad0e0",
        "type": "influxdb out",
        "z": "f61c2b29ea14be48",
        "influxdb": "5bc7043e36b5ea36",
        "name": "",
        "measurement": "test",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "univaq",
        "bucket": "se4iot",
        "x": 650,
        "y": 260,
        "wires": []
    }
]